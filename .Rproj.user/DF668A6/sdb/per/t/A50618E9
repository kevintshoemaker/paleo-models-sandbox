{
    "collab_server" : "",
    "contents" : "##########################\n# This master script writes all the MP files for the wooly mammoth model\n#  Authors: Kevin Shoemaker and Damien Fordham\n# \n#  22 May 2015 -- started scripting\n#  11 June 2015 -- added dispersal correction\n#  30 June 2016 -- cleaned up for initiation of model runs \n##########################\n\n\n#######################\n#   CLEAR THE WORKSPACE\n#######################\n\nrm(list=ls())\n\n#########################\n#   PRELIMINARY: SET PROJECT DIRECTORIES\n#########################\n\nKEVIN = FALSE # FALSE  # TRUE\nDAMIEN = FALSE\nHRA_LAB = FALSE # TRUE\nKEVIN_LAB = TRUE\n\n####################\n#   PRELIMINARY: SET GLOBAL PARAMETERS  (USER SPECIFIED PARAMS)\n####################\n\nNREPS <- 2     # number of samples to draw from the multivariate uniform prior (LHS) per niche breadth value \n##NicheBreadths = c(30,40,50,60,70,80,90,100)   \nNicheBreadths = c(70)                         # NOTE: changed to loop through single NB for testing\n\n####################\n#   PRELIMINARY: LOAD FUNCTIONS\n#################### \n\nif(KEVIN) CODE_DIRECTORY <- \"C:\\\\Users\\\\Kevin\\\\GIT\\\\paleo-models-sandbox\"       # code directory should be your local copy of the GitHub repository   \nif(HRA_LAB) CODE_DIRECTORY <- \"C:\\\\Users\\\\Akcakaya\\\\Desktop\\\\Mammoth Model\\\\paleo-models-sandbox\"\nif(DAMIEN) CODE_DIRECTORY <-  \"C:\\\\Users\\\\Damien Fordham\\\\Documents\\\\GitHub\\\\paleo-models-sandbox\"\nif(KEVIN_LAB) CODE_DIRECTORY <- \"E:\\\\GIT\\\\paleo-models-sandbox\"\n\nsetwd(CODE_DIRECTORY)\nsource(\"Rfunctions_PALEO_UTILITY.r\")     # Load all functions for Paleo project\nsource(\"Rfunction_PALEO_MAKEMPs.r\")\nsource(\"Rfunction_PALEO_RUNMPs.r\")\nsource(\"Rfunction_PALEO_EXTRACTRESULTS.r\")\n\n####################\n#  PRELIMINARY: SET UP WORKSPACE AND LOAD PACKAGES\n####################\n\nSetUpWorkspace()   # function loads packages and sets up the workspace...  \nnum_cores <- detectCores() - 1   # for setting up cluster... leave one core free for windows background processes?\n\n####################\n#  PRELIMINARY: DO DISPERSAL PRECALCULATIONS\n#          for each cell, determine which neighboring cells are in each distance bin... \n####################\n\nDistBins <- DispersalPreCalculations()\n\n#####################\n#  READ THE MP TEMPLATE FOR BUILDING MORE MP FILES\n\ntemplate <- ReadMPTemplate()\n\n#############################\n#       STEP 1. GENERATE THE MP FILES (parallel)\n#############################\n\nnb=70  # for testing...\nfor(nb in NicheBreadths){     # Loop through niche breadths\n\n  NicheBreadth <- nb   # set the current niche breadth\n  \n  #####################\n  #  SAMPLE FROM LATIN HYPERVOLUME\n  #        result is a data frame with each row representing the key parameters for an mp file\n  \n  dir <- sprintf(\"%s\\\\Sample_%s\",KCH_DIRECTORY,nb)\n  if(nb==NicheBreadths[1]){\n    masterDF <- MakeLHSSamples(nicheBreadthDir=dir,NicheBreadth)    \n  } else{\n    masterDF <- rbind(masterDF,MakeLHSSamples(dir,nb))\n  }\n  \n  registerDoParallel(cores=num_cores)    # make the cluster\n  \n  #######################\n    ## objects to export to each node in the cluster\n  \n  functionlist <- c('mp.read', 'mp.write')\n  filelist <- c('MP_DIRECTORY','template','GENTIME','humanArrival.df','EXE_DIRECTORY','DLL_FILENAME',\n                 'dispersalFunc.df','DistClasses','NPOPS','DistBins','masterDF','NicheBreadth')\n  \n  objectlist <- c(functionlist,filelist)   # full list of objects to export\n  #packagelist <- c()\n  \n  all.mps <- foreach(i = 1:nrow(masterDF),\n                       .export=objectlist,\n                       #.packages = c(\"R2WinBUGS\"),\n                       .errorhandling=c(\"pass\")\n  ) %dopar% {   \n    MakeMPfile(f=i,masterDF=masterDF,NicheBreadth=NicheBreadth,suspendtime=i)  # KTS: added and removed \"newkch\" argument to function, which uses existing KCH files instead of making new ones...\n  }\n  \n}   # end loop through niche breadths\n\n#  WRITE MODEL SPECS/METADATA\nsetwd(MP_DIRECTORY)\n## name file for LHS parameters \nwrite.csv(masterDF,\"masterDF.csv\",row.names=F)\n\n\n#############################\n#       STEP 2. RUN THE MP FILES (in parallel)\n#############################\n\n#  READ MODEL SPECS/METADATA\n\n###   read in the LHS draws/MP file specs\nsetwd(MP_DIRECTORY)\nmasterDF <- read.csv(\"masterDF.csv\",header=T,stringsAsFactors = F)\nnfiles <- nrow(masterDF)\n #MPsToRun <- as.character(masterDF$MPFilename)    # list of all MP files to run\n\nnb=70  # for testing...\nfor(nb in NicheBreadths){     # Loop through niche breadths\n  \n  NicheBreadth <- nb   # set the current niche breadth\n  \n  registerDoParallel(cores=num_cores)    # make the cluster\n  \n  #######################\n  ## objects to export to each node in the cluster\n  \n  functionlist <- c()   # 'mp.read', 'mp.write'\n  filelist <- c('masterDF','NicheBreadth','MP_DIRECTORY') #,'template','GENTIME','humanArrival.df','EXE_DIRECTORY','DLL_FILENAME','dispersalFunc.df','DistClasses','NPOPS','DistBins',\n  \n  objectlist <- c(functionlist,filelist)   # full list of objects to export\n  #packagelist <- c()\n  \n  all.mps <- foreach(i = 1:nrow(masterDF),\n                     .export=objectlist,\n                     #.packages = c(\"R2WinBUGS\"),\n                     .errorhandling=c(\"pass\")\n  ) %dopar% {   \n    RunMPfile(f=i,masterDF=masterDF,NicheBreadth=NicheBreadth,ramasloc=METAPOP_LOCATION,suspendtime=i)\n  }\n  \n}   # end loop through niche breadths\n\n\n\n#############################\n#       STEP 3. EXTRACT RESULTS FROM THE MP FILES (in parallel)\n#############################\n\n#  READ MODEL SPECS/METADATA\n\n###   read in the LHS draws/MP file specs\nsetwd(MP_DIRECTORY)\nmasterDF <- read.csv(\"masterDF.csv\",header=T,stringsAsFactors = F)\nnfiles <- nrow(masterDF)\n\nnb=70  # for testing...\nfor(nb in NicheBreadths){     # Loop through niche breadths\n  \n  NicheBreadth <- nb   # set the current niche breadth\n  \n  cl <- makeCluster(num_cores,outfile=\"LOG.TXT\")\n  registerDoParallel(cl=cl)    # make the cluster\n  \n  #######################\n  ## objects to export to each node in the cluster\n  \n  functionlist <- c()   # , 'mp.write'\n  filelist <- c('masterDF','NicheBreadth','NPOPS','TIMESTEPS','MP_DIRECTORY','GridCellAttributes')  #'MP_DIRECTORY','template','GENTIME','humanArrival.df','EXE_DIRECTORY','DLL_FILENAME','dispersalFunc.df','DistClasses','NPOPS','DistBins',\n  \n  objectlist <- c(functionlist,filelist)   # full list of objects to export\n  #packagelist <- c()\n  \n  \n  all.mps <- foreach(i = c(1), #1:nrow(masterDF),\n                     .export=objectlist,\n                     .packages =c(\"data.table\"),     #c(\"sp\",\"adehabitatHR\",\"geosphere\"),\n                     .errorhandling=c(\"pass\")\n  ) %dopar% {   \n    #ExtractMPresults(f=i,masterDF=masterDF,NicheBreadth=NicheBreadth,doMCP=TRUE,suspendtime=i)\n    ExtractMPresults2(f=i,masterDF=masterDF,NicheBreadth=NicheBreadth,doMCP=TRUE,suspendtime=i)\n  }\n  \n}   # end loop through niche breadths\n\n\n\n\n\n\n\n\n################\n# EXTRACT HARVEST RESULTS\n################\n\ntemplate <- ReadMPTemplate()   # read the MP template\n\nnb=70  # for testing...\nfor(nb in NicheBreadths){     # Loop through niche breadths\n  \n  NicheBreadth <- nb   # set the current niche breadth\n  \n  registerDoParallel(cores=num_cores)    # make the cluster\n  \n  #######################\n  ## objects to export to each node in the cluster\n  \n  functionlist <- c('mp.read', 'mp.write')\n  filelist <- c('MP_DIRECTORY','template','GENTIME','humanArrival.df','EXE_DIRECTORY','DLL_FILENAME',\n                'dispersalFunc.df','DistClasses','NPOPS','DistBins','masterDF','NicheBreadth')\n  \n  objectlist <- c(functionlist,filelist)   # full list of objects to export\n  #packagelist <- c()\n  \n  all.files <- foreach(i = 1:nrow(masterDF),\n                     .export=objectlist,\n                     #.packages = c(\"R2WinBUGS\"),\n                     .errorhandling=c(\"pass\")\n  ) %dopar% {   \n    GetHarvest(f=i,masterDF=masterDF,NicheBreadth=NicheBreadth)  \n  }\n  \n}   # end loop through niche breadths\n\n\n\n\n\n",
    "created" : 1476732717985.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3724113228",
    "id" : "A50618E9",
    "lastKnownWriteTime" : 1527627325,
    "last_content_update" : 1527627325038,
    "path" : "E:/GIT/paleo-models-sandbox/Rscript_PALEO_MAIN.R",
    "project_path" : "Rscript_PALEO_MAIN.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}
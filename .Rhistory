library(rworldmap)
library(abctools)    # for fancy calibration of the posterior - for later?
nichebreadth
getwd()
MP_DIRECTORY
setwd(MP_DIRECTORY)
masterDF
nfiles <- nrow(masterDF)
nfiles
nb=70  # for testing...
NicheBreadth <- nb   # set the current niche breadth
NicheBreadth
names(masterDF)
masterDF[1:2,1:2]
humanArrival.df
NPOPS
names(HarvParams)
f=1
HarvParams <- c(masterDF$HARV[f],masterDF$HARVZ[f],masterDF$HUMAN[f])
HarvParams
names(HarvParams)
names(HarvParams) <- c("HARV","HARVZ","HUMAN")
HarvParams
filename <- as.character(masterDF$MPFilename[f])
filename
thisFolder <- sprintf("%s\\Sample_%s\\LHS_Sample%s",MP_DIRECTORY,NicheBreadth,f)
thisFolder
setwd(thisFolder)
mpstarttime
template$mp.file$MaxDur
mpstarttime
template
GENTIME
mpstarttime <- TIMESTEPS*GENTIME
mpstarttime
template <- ReadMPTemplate()
template$mp.file$MaxDur
TIMESTEPS
template$mp.file$MaxDur*GENTIME
humanArrival.df$year_min[i]
humanArrival.df$year_min[1]
filename <- as.character(masterDF$MPFilename[f])
thisFolder <- sprintf("%s\\Sample_%s\\LHS_Sample%s",MP_DIRECTORY,NicheBreadth,f)
setwd(thisFolder)
HarvParams <- c(masterDF$HARV[f],masterDF$HARVZ[f],masterDF$HUMAN[f])
names(HarvParams) <- c("HARV","HARVZ","HUMAN")
mpstarttime <- TIMESTEPS*GENTIME   # KTS: look into the discrepancy between the mp template timesteps (2468) and the # of generations actually run (3200)
i=1
harvstarttime <- numeric(NPOPS)
harvstarttime[i] <- humanArrival.df$year_min[i] + masterDF$HUMAN[f]*(humanArrival.df$year_max[i]-humanArrival.df$year_min[i])
harvstarttime[i]
masterDF$HUMAN[f]
mpstarttime - harvstarttime
mpstarttime
harvstarttime[i]
mpstarttime - harvstarttime[i]
(mpstarttime - harvstarttime[i])/GENTIME
round((mpstarttime - harvstarttime[i])/GENTIME) + 4
mpstarttime2 <- template$mp.file$MaxDur*GENTIME  # KTS: the way it seems to be in the MAKEMP function... this gives a different start date for harvest
i=1
harvstarttime <- numeric(NPOPS)
harvstarttime2 <- numeric(NPOPS)
for(i in 1:NPOPS){
temp <- humanArrival.df$year_min[i] + masterDF$HUMAN[f]*(humanArrival.df$year_max[i]-humanArrival.df$year_min[i])
harvstarttime[i] <- round((mpstarttime - temp)/GENTIME) + 4  # KTS: added "+4" to make human effect have a time lag of 100 years i.e., 5 generations
harvstarttime2[i] <- round((mpstarttime2 - temp)/GENTIME) + 4
}
MaxN
getwd()
filename
masterDF$MPFilename[f]
temp <- gsub(".mp","",filename)
temp
temp <- gsub("\.mp","",filename)
temp <- gsub("\\.mp","",filename)
temp
abund_filename <- sprintf("%s_popAbund.csv",temp)
abund_filename
PopMat <- read.csv(abund_filename,header=F)
nrow(PopMat)
ncol(PopMat)
TIMESTEPS
NPOPS
PopMat <- read.csv(abund_filename,header=T)
nrow(PopMat)
NPOPS
ncol(PopMat)
TIMESTEPS
ncol
Harv1 <- matrix(0,nrow=nrow(PopMat),ncol=ncol(PopMat))    # what it should be
masterDF
names(masterDF)
names(HarvParams) <- c("HARV","HARVZ","HUMAN","DENSITY")
HarvParams <- c(masterDF$HARV[f],masterDF$HARVZ[f],masterDF$HUMAN[f],masterDF$DENSITY[f])
names(HarvParams) <- c("HARV","HARVZ","HUMAN","DENSITY")
HarvParams
HarvParams$DENSITY
HarvParams['DENSITY']
PreyDensity <- PopMat[i,j] /HarvParams['DENSITY'];
i=1;j=1
PopMat[i,j]
i=500;j=1000
PopMat[i,j]
i=500;j=1
PopMat[i,j]
i=1000;j=1
PopMat[i,j]
i=2000;j=1
PopMat[i,j]
i=3000;j=1
PopMat[i,j]
HarvParams['DENSITY']
HarvParams['HARVZ']
PreyZ := PreyDensity^HarvParams['HARVZ']; # This is now Density^z
PreyZ <- PreyDensity^HarvParams['HARVZ']; # This is now Density^z
PreyDensity <- PopMat[i,j] /HarvParams['DENSITY']
PreyZ <- PreyDensity^HarvParams['HARVZ']; # This is now Density^z
PreyZ
HarvParams['HARV']
HarvG <- 0.4
HarvG
FuncResp := (HarvParams['HARV'] * PreyZ) / (HarvG + PreyZ);
FuncResp <- (HarvParams['HARV'] * PreyZ) / (HarvG + PreyZ);
FuncResp
FuncResp/PreyDensity
PreyDensity
Rharvest<- ifelse(PreyDensity<=0,0,FuncResp/PreyDensity)
Rharvest
Rharvest<- ifelse(PreyDensity<=0,0,FuncResp/PreyDensity)
Rharvest*PopMat[i,j]
Harv1 <- matrix(0,nrow=nrow(PopMat),ncol=ncol(PopMat))    # what it should be
Harv2 <- matrix(0,nrow=nrow(PopMat),ncol=ncol(PopMat))    # what may have been modeled by accident
Harv1[i,j] <- round(Rharvest*PopMat[i,j])
i=3000;j=1
for(i in 1:NPOPS){
for(j in harvstarttime[i]:TIMESTEPS){
PreyDensity <- PopMat[i,j] /HarvParams['DENSITY']
PreyZ <- PreyDensity^HarvParams['HARVZ']; # This is now Density^z
FuncResp <- (HarvParams['HARV'] * PreyZ) / (HarvG + PreyZ);
Rharvest<- ifelse(PreyDensity<=0,0,FuncResp/PreyDensity)
Harv1[i,j] <- round(Rharvest*PopMat[i,j])
}
for(j in harvstarttime2[i]:TIMESTEPS){
PreyDensity <- PopMat[i,j] /HarvParams['DENSITY']
PreyZ <- PreyDensity^HarvParams['HARVZ']; # This is now Density^z
FuncResp <- (HarvParams['HARV'] * PreyZ) / (HarvG + PreyZ);
Rharvest<- ifelse(PreyDensity<=0,0,FuncResp/PreyDensity)
Harv2[i,j] <- round(Rharvest*PopMat[i,j])
}
}
i=3000
nonzeroes <- PopMat[i,]>0
nonzeroes
PopMat[i,]
nonzeroes <- PopMat[i,]>0
nonzeroes[1]
PopMat[i,1]
PreyDensity <- numeric(TIMESTEPS)
PreyDensity[nonzeroes] <- PopMat[i,nonzeroes] /HarvParams['DENSITY']
PreyDensity
nonzeroes <- PopMat[i,]>0
nonzeroes
PreyDensity <- numeric(TIMESTEPS)
PreyDensity[nonzeroes]
PopMat[i,nonzeroes]
PopMat[i,nonzeroes][1]
PopMat[i,nonzeroes][2]
i
PopMat[i,nonzeroes][2:5]
PopMat[i,nonzeroes][2:5]/HarvParams['DENSITY']
PopMat[i,nonzeroes][2:10]/HarvParams['DENSITY']
is.vector
is.vector(PopMat[i,nonzeroes][2:10]/HarvParams['DENSITY'])
?setDF
temp <- gsub("\\.mp","",filename)
abund_filename <- sprintf("%s_popAbund.csv",temp)
temp <- data.table::fread(abund_filename,header=F)
temp <- setDF(temp)
temp <- data.table::fread(abund_filename,header=T)
temp <- setDF(temp)
PopMat <- as.matrix(temp)
nrow(PopMat)
NPOPS
ncol(PopMat)
TIMESTEPS
Harv1 <- matrix(0,nrow=nrow(PopMat),ncol=ncol(PopMat))    # what it should be
Harv2 <- matrix(0,nrow=nrow(PopMat),ncol=ncol(PopMat))    # what may have been modeled by accident
HarvG <- 0.4
i=3000
nonzeroes <- PopMat[i,]>0
PreyDensity <- numeric(TIMESTEPS)
PopMat[i,nonzeroes] /HarvParams['DENSITY']
is.vector(PopMat[i,nonzeroes])
nonzeroes <- PopMat[i,]>0
PreyDensity <- numeric(TIMESTEPS)
PreyDensity[nonzeroes] <- PopMat[i,nonzeroes] /HarvParams['DENSITY']
PreyZ <- numeric(TIMESTEPS)
HarvParams['HARVZ']
PreyZ[nonzeroes] <- PreyDensity[nonzeroes]^HarvParams['HARVZ'] # This is now Density^z
PreyZ <- numeric(TIMESTEPS)
PreyZ[nonzeroes] <- PreyDensity[nonzeroes]^HarvParams['HARVZ'] # This is now Density^z
FuncResp <- numeric(TIMESTEPS)
FuncResp <- numeric(TIMESTEPS)
FuncResp[nonzeroes] <- (HarvParams['HARV'] * PreyZ[nonzeroes]) / (HarvG + PreyZ[nonzeroes])
Rharvest <- numeric(TIMESTEPS)
Rharvest <- numeric(TIMESTEPS)
Rharvest[nonzeroes]<- FuncResp[nonzeroes]/PreyDensity[nonzeroes]
Harv1[i,harvstarttime[i]:TIMESTEPS] <- round(Rharvest*PopMat[i,harvstarttime[i]:TIMESTEPS])
Rharvest <- numeric(TIMESTEPS)
Rharvest[nonzeroes]<- FuncResp[nonzeroes]/PreyDensity[nonzeroes]
Harv1[i,harvstarttime[i]:TIMESTEPS] <- round(Rharvest[i,harvstarttime[i]:TIMESTEPS]*PopMat[i,harvstarttime[i]:TIMESTEPS])
Harv1[i,harvstarttime[i]:TIMESTEPS]
Harv1[i,harvstarttime[i]:TIMESTEPS] <- round(Rharvest[harvstarttime[i]:TIMESTEPS]*PopMat[i,harvstarttime[i]:TIMESTEPS])
Harv2[i,harvstarttime2[i]:TIMESTEPS] <- round(Rharvest[harvstarttime2[i]:TIMESTEPS]*PopMat[i,harvstarttime2[i]:TIMESTEPS])
Harv1 <- matrix(0,nrow=nrow(PopMat),ncol=ncol(PopMat))    # what it should be
Harv2 <- matrix(0,nrow=nrow(PopMat),ncol=ncol(PopMat))    # what may have been modeled by accident
HarvG <- 0.4
i=3000
for(i in 1:NPOPS){
nonzeroes <- PopMat[i,]>0
PreyDensity <- numeric(TIMESTEPS)
PreyDensity[nonzeroes] <- PopMat[i,nonzeroes] /HarvParams['DENSITY']
PreyZ <- numeric(TIMESTEPS)
PreyZ[nonzeroes] <- PreyDensity[nonzeroes]^HarvParams['HARVZ'] # This is now Density^z
FuncResp <- numeric(TIMESTEPS)
FuncResp[nonzeroes] <- (HarvParams['HARV'] * PreyZ[nonzeroes]) / (HarvG + PreyZ[nonzeroes])
Rharvest <- numeric(TIMESTEPS)
Rharvest[nonzeroes]<- FuncResp[nonzeroes]/PreyDensity[nonzeroes]
Harv1[i,harvstarttime[i]:TIMESTEPS] <- round(Rharvest[harvstarttime[i]:TIMESTEPS]*PopMat[i,harvstarttime[i]:TIMESTEPS])
Harv2[i,harvstarttime2[i]:TIMESTEPS] <- round(Rharvest[harvstarttime2[i]:TIMESTEPS]*PopMat[i,harvstarttime2[i]:TIMESTEPS])
}
setwd(thisFolder)
temp <- gsub("\\.mp","",filename)
temp
filename <- sprintf("%s_harvest1.csv",temp)
filename
data.table::fwrite(as.data.frame(Harv1),file=filename)
filename <- sprintf("%s_harvest2.csv",temp)
data.table::fwrite(as.data.frame(Harv2),file=filename)
nb=70  # for testing...
NicheBreadth <- nb   # set the current niche breadth
nb=70  # for testing...
NicheBreadth <- nb   # set the current niche breadth
num_cores
num_cores=2
functionlist <- c('mp.read', 'mp.write')
functionlist <- c('mp.read', 'mp.write')
filelist <- c('MP_DIRECTORY','template','GENTIME','humanArrival.df','EXE_DIRECTORY','DLL_FILENAME',
'dispersalFunc.df','DistClasses','NPOPS','DistBins','masterDF','NicheBreadth')
objectlist <- c(functionlist,filelist)   # full list of objects to export
i
i=1
GetHarvest(f=i,masterDF=masterDF,NicheBreadth=NicheBreadth)
f=1
GetHarvest <- function(f=1,masterDF=masterDF,NicheBreadth=70){
filename <- as.character(masterDF$MPFilename[f])
## set up the new folder to store the MP file and associated KCH files... (specifies the niche breadth)
thisFolder <- sprintf("%s\\Sample_%s\\LHS_Sample%s",MP_DIRECTORY,NicheBreadth,f)
setwd(thisFolder)
HarvParams <- c(masterDF$HARV[f],masterDF$HARVZ[f],masterDF$HUMAN[f],masterDF$DENSITY[f])
names(HarvParams) <- c("HARV","HARVZ","HUMAN","DENSITY")
mpstarttime <- TIMESTEPS*GENTIME   # KTS: look into the discrepancy between the mp template timesteps (2468) and the # of generations actually run (3200)
mpstarttime2 <- template$mp.file$MaxDur*GENTIME  # KTS: the way it seems to be in the MAKEMP function... this gives a different start date for harvest
i=1
harvstarttime <- numeric(NPOPS)
harvstarttime2 <- numeric(NPOPS)
for(i in 1:NPOPS){
temp <- humanArrival.df$year_min[i] + masterDF$HUMAN[f]*(humanArrival.df$year_max[i]-humanArrival.df$year_min[i])
harvstarttime[i] <- round((mpstarttime - temp)/GENTIME) + 4  # KTS: added "+4" to make human effect have a time lag of 100 years i.e., 5 generations
harvstarttime2[i] <- round((mpstarttime2 - temp)/GENTIME) + 4
}
temp <- gsub("\\.mp","",filename)
abund_filename <- sprintf("%s_popAbund.csv",temp)
temp <- data.table::fread(abund_filename,header=T)
temp <- setDF(temp)
PopMat <- as.matrix(temp)
nrow(PopMat)   # check!
NPOPS
ncol(PopMat)
TIMESTEPS
# compute expected harvest (snapshot of number harvested that year, so only 1 year out of every 25 years is considered)
Harv1 <- matrix(0,nrow=nrow(PopMat),ncol=ncol(PopMat))    # what it should be
Harv2 <- matrix(0,nrow=nrow(PopMat),ncol=ncol(PopMat))    # what may have been modeled by accident
HarvG <- 0.4
i=3000
for(i in 1:NPOPS){
nonzeroes <- PopMat[i,]>0
PreyDensity <- numeric(TIMESTEPS)
PreyDensity[nonzeroes] <- PopMat[i,nonzeroes] /HarvParams['DENSITY']
PreyZ <- numeric(TIMESTEPS)
PreyZ[nonzeroes] <- PreyDensity[nonzeroes]^HarvParams['HARVZ'] # This is now Density^z
FuncResp <- numeric(TIMESTEPS)
FuncResp[nonzeroes] <- (HarvParams['HARV'] * PreyZ[nonzeroes]) / (HarvG + PreyZ[nonzeroes])
Rharvest <- numeric(TIMESTEPS)
Rharvest[nonzeroes]<- FuncResp[nonzeroes]/PreyDensity[nonzeroes]
Harv1[i,harvstarttime[i]:TIMESTEPS] <- round(Rharvest[harvstarttime[i]:TIMESTEPS]*PopMat[i,harvstarttime[i]:TIMESTEPS])
Harv2[i,harvstarttime2[i]:TIMESTEPS] <- round(Rharvest[harvstarttime2[i]:TIMESTEPS]*PopMat[i,harvstarttime2[i]:TIMESTEPS])
}
####################
# SAVE RESULTS TO HARD DISK
####################
setwd(thisFolder)
temp <- gsub("\\.mp","",filename)
filename <- sprintf("%s_harvest1.csv",temp)
data.table::fwrite(as.data.frame(Harv1),file=filename)
filename <- sprintf("%s_harvest2.csv",temp)
data.table::fwrite(as.data.frame(Harv2),file=filename)
}
GetHarvest(f=i,masterDF=masterDF,NicheBreadth=NicheBreadth)
Harv1[3000,1:100]
Harv1[3000,harvstarttime[3000]:harvstarttime[3000]+10]
Harv1[3000,harvstarttime[3000]:(harvstarttime[3000]+10)]
template$mp.file$MaxDur
TIMESTEPS
# compute expected harvest (snapshot of number harvested that year, so only 1 year out of every 25 years is considered)
Harv1 <- matrix(0,nrow=nrow(PopMat),ncol=ncol(PopMat))    # what it should be
Harv2 <- matrix(0,nrow=nrow(PopMat),ncol=ncol(PopMat))    # what may have been modeled by accident
HarvG <- 0.4
i=3000
for(i in 1:NPOPS){
nonzeroes <- PopMat[i,]>0
PreyDensity <- numeric(TIMESTEPS)
PreyDensity[nonzeroes] <- PopMat[i,nonzeroes] /HarvParams['DENSITY']
PreyZ <- numeric(TIMESTEPS)
PreyZ[nonzeroes] <- PreyDensity[nonzeroes]^HarvParams['HARVZ'] # This is now Density^z
FuncResp <- numeric(TIMESTEPS)
FuncResp[nonzeroes] <- (HarvParams['HARV'] * PreyZ[nonzeroes]) / (HarvG + PreyZ[nonzeroes])
Rharvest <- numeric(TIMESTEPS)
Rharvest[nonzeroes]<- FuncResp[nonzeroes]/PreyDensity[nonzeroes]
Harv1[i,harvstarttime[i]:TIMESTEPS] <- round(Rharvest[(TIMESTEPS-harvstarttime[i]):TIMESTEPS]*PopMat[i,(TIMESTEPS-harvstarttime[i]):TIMESTEPS])
Harv2[i,harvstarttime2[i]:TIMESTEPS] <- round(Rharvest[(TIMESTEPS-harvstarttime2[i]):TIMESTEPS]*PopMat[i,(TIMESTEPS-harvstarttime2[i]):TIMESTEPS])
}
f=1
filename <- as.character(masterDF$MPFilename[f])
## set up the new folder to store the MP file and associated KCH files... (specifies the niche breadth)
thisFolder <- sprintf("%s\\Sample_%s\\LHS_Sample%s",MP_DIRECTORY,NicheBreadth,f)
setwd(thisFolder)
HarvParams <- c(masterDF$HARV[f],masterDF$HARVZ[f],masterDF$HUMAN[f],masterDF$DENSITY[f])
names(HarvParams) <- c("HARV","HARVZ","HUMAN","DENSITY")
mpstarttime <- TIMESTEPS*GENTIME   # KTS: look into the discrepancy between the mp template timesteps (2468) and the # of generations actually run (3200)
mpstarttime2 <- template$mp.file$MaxDur*GENTIME  # KTS: the way it seems to be in the MAKEMP function... this gives a different start date for harvest
i=1
harvstarttime <- numeric(NPOPS)
harvstarttime2 <- numeric(NPOPS)
for(i in 1:NPOPS){
temp <- humanArrival.df$year_min[i] + masterDF$HUMAN[f]*(humanArrival.df$year_max[i]-humanArrival.df$year_min[i])
harvstarttime[i] <- round((mpstarttime - temp)/GENTIME) + 4  # KTS: added "+4" to make human effect have a time lag of 100 years i.e., 5 generations
harvstarttime2[i] <- round((mpstarttime2 - temp)/GENTIME) + 4
}
temp <- gsub("\\.mp","",filename)
abund_filename <- sprintf("%s_popAbund.csv",temp)
temp <- data.table::fread(abund_filename,header=T)
temp <- setDF(temp)
PopMat <- as.matrix(temp)
nrow(PopMat)   # check!
NPOPS
ncol(PopMat)
TIMESTEPS
# compute expected harvest (snapshot of number harvested that year, so only 1 year out of every 25 years is considered)
Harv1 <- matrix(0,nrow=nrow(PopMat),ncol=ncol(PopMat))    # what it should be
Harv2 <- matrix(0,nrow=nrow(PopMat),ncol=ncol(PopMat))    # what may have been modeled by accident
HarvG <- 0.4
i=3000
for(i in 1:NPOPS){
nonzeroes <- PopMat[i,]>0
PreyDensity <- numeric(TIMESTEPS)
PreyDensity[nonzeroes] <- PopMat[i,nonzeroes] /HarvParams['DENSITY']
PreyZ <- numeric(TIMESTEPS)
PreyZ[nonzeroes] <- PreyDensity[nonzeroes]^HarvParams['HARVZ'] # This is now Density^z
FuncResp <- numeric(TIMESTEPS)
FuncResp[nonzeroes] <- (HarvParams['HARV'] * PreyZ[nonzeroes]) / (HarvG + PreyZ[nonzeroes])
Rharvest <- numeric(TIMESTEPS)
Rharvest[nonzeroes]<- FuncResp[nonzeroes]/PreyDensity[nonzeroes]
Harv1[i,harvstarttime[i]:TIMESTEPS] <- round(Rharvest[(TIMESTEPS-harvstarttime[i]):TIMESTEPS]*PopMat[i,(TIMESTEPS-harvstarttime[i]):TIMESTEPS])
Harv2[i,harvstarttime2[i]:TIMESTEPS] <- round(Rharvest[(TIMESTEPS-harvstarttime2[i]):TIMESTEPS]*PopMat[i,(TIMESTEPS-harvstarttime2[i]):TIMESTEPS])
}
Harv1 <- matrix(0,nrow=nrow(PopMat),ncol=ncol(PopMat))    # what it should be
Harv2 <- matrix(0,nrow=nrow(PopMat),ncol=ncol(PopMat))    # what may have been modeled by accident
HarvG <- 0.4
i=3000
for(i in 1:NPOPS){
nonzeroes <- PopMat[i,]>0
PreyDensity <- numeric(TIMESTEPS)
PreyDensity[nonzeroes] <- PopMat[i,nonzeroes] /HarvParams['DENSITY']
PreyZ <- numeric(TIMESTEPS)
PreyZ[nonzeroes] <- PreyDensity[nonzeroes]^HarvParams['HARVZ'] # This is now Density^z
FuncResp <- numeric(TIMESTEPS)
FuncResp[nonzeroes] <- (HarvParams['HARV'] * PreyZ[nonzeroes]) / (HarvG + PreyZ[nonzeroes])
Rharvest <- numeric(TIMESTEPS)
Rharvest[nonzeroes]<- FuncResp[nonzeroes]/PreyDensity[nonzeroes]
Harv1[i,(TIMESTEPS-harvstarttime[i]):TIMESTEPS] <- round(Rharvest[(TIMESTEPS-harvstarttime[i]):TIMESTEPS]*PopMat[i,(TIMESTEPS-harvstarttime[i]):TIMESTEPS])
Harv2[i,(TIMESTEPS-harvstarttime2[i]):TIMESTEPS] <- round(Rharvest[(TIMESTEPS-harvstarttime2[i]):TIMESTEPS]*PopMat[i,(TIMESTEPS-harvstarttime2[i]):TIMESTEPS])
}
setwd(thisFolder)
temp <- gsub("\\.mp","",filename)
filename <- sprintf("%s_harvest1.csv",temp)
data.table::fwrite(as.data.frame(Harv1),file=filename)
filename <- sprintf("%s_harvest2.csv",temp)
data.table::fwrite(as.data.frame(Harv2),file=filename)
harvstarttime
harvstarttime[i]
TIMESTEPS
Harv1 <- matrix(0,nrow=nrow(PopMat),ncol=ncol(PopMat))    # what it should be
Harv2 <- matrix(0,nrow=nrow(PopMat),ncol=ncol(PopMat))    # what may have been modeled by accident
HarvG <- 0.4
i=3000
for(i in 1:NPOPS){
nonzeroes <- PopMat[i,]>0
PreyDensity <- numeric(TIMESTEPS)
PreyDensity[nonzeroes] <- PopMat[i,nonzeroes] /HarvParams['DENSITY']
PreyZ <- numeric(TIMESTEPS)
PreyZ[nonzeroes] <- PreyDensity[nonzeroes]^HarvParams['HARVZ'] # This is now Density^z
FuncResp <- numeric(TIMESTEPS)
FuncResp[nonzeroes] <- (HarvParams['HARV'] * PreyZ[nonzeroes]) / (HarvG + PreyZ[nonzeroes])
Rharvest <- numeric(TIMESTEPS)
Rharvest[nonzeroes]<- FuncResp[nonzeroes]/PreyDensity[nonzeroes]
Harv1[i,harvstarttime[i]:TIMESTEPS] <- round(Rharvest[harvstarttime[i]:TIMESTEPS]*PopMat[i,harvstarttime[i]:TIMESTEPS])
Harv2[i,harvstarttime2[i]:TIMESTEPS] <- round(Rharvest[harvstarttime2[i]:TIMESTEPS]*PopMat[i,harvstarttime2[i]:TIMESTEPS])
}
setwd(thisFolder)
temp <- gsub("\\.mp","",filename)
filename <- sprintf("%s_harvest1.csv",temp)
data.table::fwrite(as.data.frame(Harv1),file=filename)
filename <- sprintf("%s_harvest2.csv",temp)
data.table::fwrite(as.data.frame(Harv2),file=filename)
f=1
filename <- as.character(masterDF$MPFilename[f])
filename
filename_mp <- as.character(masterDF$MPFilename[f])
filename_noext <- gsub("\\.mp","",filename)
filename_noext
thisFolder <- sprintf("%s\\Sample_%s\\LHS_Sample%s",MP_DIRECTORY,NicheBreadth,f)
thisFolder
thisFolder <- sprintf("%s\\Sample_%s\\LHS_Sample%s",MP_DIRECTORY,NicheBreadth)
thisFolder <- sprintf("%s\\Sample_%s\\LHS_Sample",MP_DIRECTORY,NicheBreadth)
thisFolder
thisFolder <- sprintf("%s\\Sample_%s",MP_DIRECTORY,NicheBreadth)
thisFolder
setwd(thisFolder)
thisFolder <- sprintf("%s\\Sample_%s",MP_DIRECTORY,NicheBreadth)
thisFolder
setwd(thisFolder)
HarvParams <- c(masterDF$HARV[f],masterDF$HARVZ[f],masterDF$HUMAN[f],masterDF$DENSITY[f])
names(HarvParams) <- c("HARV","HARVZ","HUMAN","DENSITY")
mpstarttime <- TIMESTEPS*GENTIME   # KTS: look into the discrepancy between the mp template timesteps (2468) and the # of generations actually run (3200)
mpstarttime2 <- template$mp.file$MaxDur*GENTIME  # KTS: the way it seems to be in the MAKEMP function... this gives a different start date for harvest
i=1
harvstarttime <- numeric(NPOPS)
harvstarttime2 <- numeric(NPOPS)
harvstarttime
harvstarttime2 <- numeric(NPOPS)
for(i in 1:NPOPS){
temp <- humanArrival.df$year_min[i] + masterDF$HUMAN[f]*(humanArrival.df$year_max[i]-humanArrival.df$year_min[i])
harvstarttime[i] <- round((mpstarttime - temp)/GENTIME) + 4  # KTS: added "+4" to make human effect have a time lag of 100 years i.e., 5 generations
harvstarttime2[i] <- round((mpstarttime2 - temp)/GENTIME) + 4
}
abund_filename <- sprintf("%s_popAbund.csv",filename_noext)
abund_filename
temp <- data.table::fread(abund_filename,header=T)
temp <- setDF(temp)
PopMat <- as.matrix(temp)
nrow(PopMat)   # check!
NPOPS
ncol(PopMat)
TIMESTEPS
Harv1 <- matrix(0,nrow=nrow(PopMat),ncol=ncol(PopMat))    # what it should be
Harv2 <- matrix(0,nrow=nrow(PopMat),ncol=ncol(PopMat))    # what may have been modeled by accident
HarvG <- 0.4
i=3000
NPOPS
for(i in 1:NPOPS){
nonzeroes <- PopMat[i,]>0
PreyDensity <- numeric(TIMESTEPS)
PreyDensity[nonzeroes] <- PopMat[i,nonzeroes] /HarvParams['DENSITY']
PreyZ <- numeric(TIMESTEPS)
PreyZ[nonzeroes] <- PreyDensity[nonzeroes]^HarvParams['HARVZ'] # This is now Density^z
FuncResp <- numeric(TIMESTEPS)
FuncResp[nonzeroes] <- (HarvParams['HARV'] * PreyZ[nonzeroes]) / (HarvG + PreyZ[nonzeroes])
Rharvest <- numeric(TIMESTEPS)
Rharvest[nonzeroes]<- FuncResp[nonzeroes]/PreyDensity[nonzeroes]
Harv1[i,harvstarttime[i]:TIMESTEPS] <- round(Rharvest[harvstarttime[i]:TIMESTEPS]*PopMat[i,harvstarttime[i]:TIMESTEPS])
Harv2[i,harvstarttime2[i]:TIMESTEPS] <- round(Rharvest[harvstarttime2[i]:TIMESTEPS]*PopMat[i,harvstarttime2[i]:TIMESTEPS])
}
setwd(thisFolder)
filename_out <- sprintf("%s_harvest1.csv",filename_noext)
data.table::fwrite(as.data.frame(Harv1),file=filename_out)
filename_out <- sprintf("%s_harvest2.csv",filename_noext)
data.table::fwrite(as.data.frame(Harv2),file=filename_out)
template$mp.file$MaxDur*GENTIME
seq(harvstarttime2,0,GENTIME)
seq
?seq
seq(from=harvstarttime2,to=0,by=GENTIME)
harvstarttime2
mpstarttime <- TIMESTEPS*GENTIME   # KTS: look into the discrepancy between the mp template timesteps (2468) and the # of generations actually run (3200)
seq(from=mpstarttime,to=0,by=GENTIME)
seq(from=mpstarttime,to=0,by=-1*GENTIME)
TIMESTEPS
allyears <- seq(from=mpstarttime,to=0,by=-1*GENTIME)
length(allyears)
allyears <- seq(from=mpstarttime,to=1,by=-1*GENTIME)
length(allyears)
colnames(Harv2)
colnames(Harv2) <- allyears
filename_out <- sprintf("%s_harvest2.csv",filename_noext)
data.table::fwrite(as.data.frame(Harv2),file=filename_out)
filename_out
temp <- data.table::fread(filename_out)
head(temp)
head(temp[,1:6])
temp <- data.table::fread(filename_out,header = T)
head(temp[,1:6])
